tokenizer:
  pfunction:
    function: "__import__('actl').tokenizer.Tokenizer"
    kwargs:
      buff:
        pget: "this['buff',]"


scope:
  pfunction:
    function: "__import__('std').Scope"


rules:
  pget: "__import__('std').RULES"


parser:
  pfunction:
    function: "__import__('actl').code.Parser"
    kwargs:
      code:
        pget: "this['code',]"
      rules:
        pget: "this['rules',]"


sexecutor:
  pfunction:
    function: "__import__('std').SExecutor"
    kwargs:
      code:
        pget: "this['code',]"


translator:
  pfunction:
    function: "__import__('adb').TranslateToString"
    kwargs:
      code:
        pget: "this['code',]"


build:
  def pfunction: |
    Code = __import__('actl').code.Code
    this['code',] = Code(buff=list(this['tokenizer',].tokenize()), scope=this['scope',])

    LinkerLayer = __import__('actl').project.LinkerLayer
    llayer = LinkerLayer(this['parser',],
                         this['sexecutor',],
                         this['translator',])
    llayer.link()


mainf:
  pfset: "lambda path: this.__setitem__(('buff',), open(path).read())"
